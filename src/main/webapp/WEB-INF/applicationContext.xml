<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/tx
           https://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/data/jpa
           https://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Enable component scanning for repositories -->
    <context:annotation-config/>

    <!-- DataSource for PostgreSQL -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/smartdelivery"/>
        <property name="username" value="postgres"/>
        <property name="password" value="Wissam0908"/>
    </bean>

    <!-- EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.smartlogi.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
                <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect"/>
            </bean>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Enable Spring Data JPA Repositories -->
    <jpa:repositories base-package="com.smartlogi.repository"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"
                      query-lookup-strategy="create-if-not-found"/>

    <!-- Enable Transaction Annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- Service -->
    <bean id="livreurService" class="com.smartlogi.service.LivreurService">
        <property name="livreurRepository" ref="livreurRepository"/>
    </bean>
<!--    <bean id="colisService" class="com.smartlogi.service.ColisService">-->
<!--        <property name="colisRepository" ref="colisRepository"/>-->
<!--    </bean>-->

    <!-- Controller -->
    <bean name="/livreurs" class="com.smartlogi.controller.LivreurController">
        <property name="livreurService" ref="livreurService"/>
    </bean>
    <bean name="/livreurs/*" class="com.smartlogi.controller.LivreurController">
        <property name="livreurService" ref="livreurService"/>
    </bean>

<!--    <bean name="/colis/*" class="com.smartlogi.controller.ColisController">-->
<!--        <property name="colisService" ref="colisService" />-->
<!--    </bean>-->
<!--    <bean name="/colis" class="com.smartlogi.controller.ColisController">-->
<!--        <property name="colisService" ref="colisService" />-->
<!--    </bean>-->

    <!-- Handler Mapping -->
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>

    <!-- JSON View -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- View Resolver -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
</beans>